// <auto-generated />
using System;
using DarkStore.Api.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DarkStore.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230726135347_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DarkStore.Api.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Livros"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fantasias"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Quadros e Pôsteres"
                        });
                });

            modelBuilder.Entity("DarkStore.Api.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Salem é um clássico do gênero de horror e apresenta os elementos característicos das obras de Stephen King, como personagens complexos, tensão psicológica e uma atmosfera sombria. É considerado um dos melhores romances de vampiro já escritos e consolidou o lugar de King como um mestre do terror moderno.",
                            ImageUrl = "https://i.imgur.com/marl3ow.jpg",
                            Name = "Salem - Stephen King",
                            Price = 79m,
                            Quantity = 200
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "O romance gótico Drácula (1897) do autor britânico Bram Stocker, narra a história do Conde Drácula, vilão morto-vivo da Transilvânia, que se tornou típico representante do mito.",
                            ImageUrl = "https://i.imgur.com/OSZUZ0M.jpg",
                            Name = "Dracula - Bram Stoker",
                            Price = 89m,
                            Quantity = 500
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Carmilla é uma novela de ficção gótica do escritor irlandês Joseph Sheridan Le Fanu. É narrada por Laura, uma jovem estiriana que conta os dias passados na companhia da misteriosa Carmilla e os eventos estranhos que ocorreram na região após a sua chegada.",
                            ImageUrl = "https://i.imgur.com/3j5XAzq.jpg",
                            Name = "Carmilla: A Vampira de Karnstein - Sheridan Le Fanu",
                            Price = 59m,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "O vestido longo que vem acompanhado de chapéu de bruxa, peruca e vassoura.",
                            ImageUrl = "https://i.imgur.com/NoCSSip.jpg",
                            Name = "Vestido de Bruxa",
                            Price = 59m,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "Roupa de Múmia com o corpo totalmente enfaixado",
                            ImageUrl = "https://i.imgur.com/y6Afq8p.jpg",
                            Name = "Roupa Múmia",
                            Price = 59m,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "Roupa do temido palhaço Pennywise do filme 'It, a coisa'.",
                            ImageUrl = "https://i.imgur.com/y6Afq8p.jpg",
                            Name = "Pennywise",
                            Price = 59m,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Description = "Arte do Nosferatu, o vampiro está em um cemitério e há morcegos voando no ambiente.",
                            ImageUrl = "https://i.imgur.com/L1gbfcI.jpg",
                            Name = "Nosferatu",
                            Price = 119m,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Description = "Poster do filme clássico do Frankenstein.",
                            ImageUrl = "https://i.imgur.com/yHzHNEN.jpg",
                            Name = "Frankenstein",
                            Price = 99m,
                            Quantity = 25
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Description = "arte promocional o filme O Vampiro.",
                            ImageUrl = "https://i.imgur.com/7Tamzx5.jpg",
                            Name = "O Vampiro",
                            Price = 79m,
                            Quantity = 34
                        });
                });

            modelBuilder.Entity("DarkStore.Api.Entities.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("DarkStore.Api.Entities.ShoppingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ShoppingCartId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("DarkStore.Api.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserName = "Raquel Silva"
                        },
                        new
                        {
                            Id = 2,
                            UserName = "Rafael Silva"
                        },
                        new
                        {
                            Id = 3,
                            UserName = "Samuel Silva"
                        },
                        new
                        {
                            Id = 4,
                            UserName = "Ana Silva"
                        });
                });

            modelBuilder.Entity("DarkStore.Api.Entities.Product", b =>
                {
                    b.HasOne("DarkStore.Api.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DarkStore.Api.Entities.ShoppingCart", b =>
                {
                    b.HasOne("DarkStore.Api.Entities.User", null)
                        .WithOne("ShoppingCart")
                        .HasForeignKey("DarkStore.Api.Entities.ShoppingCart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DarkStore.Api.Entities.ShoppingCartItem", b =>
                {
                    b.HasOne("DarkStore.Api.Entities.Product", "Product")
                        .WithMany("Items")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DarkStore.Api.Entities.ShoppingCart", "ShoppingCart")
                        .WithMany("Items")
                        .HasForeignKey("ShoppingCartId");

                    b.Navigation("Product");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("DarkStore.Api.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DarkStore.Api.Entities.Product", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("DarkStore.Api.Entities.ShoppingCart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("DarkStore.Api.Entities.User", b =>
                {
                    b.Navigation("ShoppingCart");
                });
#pragma warning restore 612, 618
        }
    }
}
