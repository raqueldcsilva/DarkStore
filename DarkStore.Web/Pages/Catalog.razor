@page "/produtos"
@inject IProductService productService

@if (Products == null)
{
    <Loading></Loading>
}
else
{
    <h3 class="mb-5">Produtos</h3>    
    @if (Products.Count() > 0)
    {
        var productsByCategory = from product in Products
            group product by product.CategoryId
            into
                productByCategoryGroup
            orderby productByCategoryGroup.Key
            select productByCategoryGroup;
        @foreach (var productGroup in productsByCategory)
        {
            <h4>@productGroup.FirstOrDefault(pg => pg.CategoryId == productGroup.Key).CategoryName</h4>
            <div class="row mt-3">
                <ShowProduct Products="@productGroup"></ShowProduct>
            </div>
            <hr class="mb-2"/>
        }
        
    }
}    

@code {
    public IEnumerable<ProductDto>? Products { get; set; }
    
    [Inject]
    public IShoppingCartService? ShoppingCartService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Products = await productService.GetProducts();

        var shoppingCartItems = await ShoppingCartService.GetItems(LoginUser.UserId);
        var totalQuantity = shoppingCartItems.Sum(i => i.Quantity);
        
        ShoppingCartService.RaiseEventOnShoppingCartChanged(totalQuantity);
    }

}